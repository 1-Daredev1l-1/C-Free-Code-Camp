Compilation: 

        . PROBLEM: 
            . Importing header units like <iostream> and <string> works mostly, but mixing up the import of string 
                and iostream seens to generate weird errors. The issue seems to be the same 
                    here: https://github.com/llvm/llvm-project/issues/58540
            . For now, I will make sure that everytime we need the string header, we #include is the old way,
                but we'll import <iostream> as a module.

            . This will eventually be the same procedure we follow for the other compilers so we have 
                the same code.
        . Commands: 

		. Compilation: 
			//Generate the header unit for iostream
				. clang++ -std=c++20 -stdlib=libc++ -x c++-system-header iostream --precompile -o iostream.pcm
			//Build the interface file into a pcm file, giving it the location of the header unit for iostream
				. clang++ -std=c++20 -stdlib=libc++ -fmodule-file=iostream.pcm -x c++-module math.ixx --precompile -o math_stuff.pcm

			//Generate the object file for the entry point (main) file
				. clang++ -std=c++20 -stdlib=libc++ -fmodule-file=iostream.pcm main.cpp -fprebuilt-module-path=. -c -o main.o

			//Generate the object file for the module file
				. clang++ -std=c++20 -stdlib=libc++ math_stuff.pcm -c -o math_stuff.o

			//Link everything together to generate the rooster binary.
				. clang++ -std=c++20 -stdlib=libc++ main.o math_stuff.o -o rooster